#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

#define MAX_INPUT_SIZE 1024

/**
 * prompt - Display the shell prompt.
 */
void prompt(void)
{
    printf("#cisfun$ ");
}

/**
 * execute_command - Execute the given command.
 * @command: The command to execute.
 */
void execute_command(char *command)
{
    pid_t pid, wpid;
    int status;

    pid = fork();

    if (pid == 0)
    {
        /* Child process */
        if (execve(command, NULL, NULL) == -1)
        {
            perror("./shell");
            exit(EXIT_FAILURE);
        }
    }
    else if (pid < 0)
    {
        perror("fork");
    }
    else
    {
        /* Parent process */
        do
        {
            wpid = waitpid(pid, &status, WUNTRACED);
        } while (!WIFEXITED(status) && !WIFSIGNALED(status));
    }
}

/**
 * main - Entry point for the simple shell.
 *
 * Return: Always EXIT_SUCCESS.
 */
int main(void)
{
    char input[MAX_INPUT_SIZE];

    while (1)
    {
        prompt();

        if (fgets(input, sizeof(input), stdin) == NULL)
        {
            printf("\n");
            break; // Handle end of file (Ctrl+D)
        }

        input[strcspn(input, "\n")] = '\0'; // Remove trailing newline

        if (strcmp(input, "exit") == 0)
        {
            break;
        }

        execute_command(input);
    }

    return EXIT_SUCCESS;
}

